---
- name: Linux Desktop Setup
  hosts: localhost    # desktop setup
  connection: local
  become: true

  vars:
    username: clep   # change to current username
    distro: opensuse    # change to distro, options: opensuse, debian, fedora
    desktop: kde    # change to de, options: kde, gnome
    shell: bash    # change to shell, options: zsh, bash

  collections:
    - community.general

  tasks:
    ### Desktopenviorment block ###
    - name: Setup KDE
      when: desktop == "kde"
      block:
        - name: Remove unwanted packages kde
          ansible.builtin.package:
            pkg:
            state: absent

    - name: Setup Gnome
      when: desktop == "gnome"
      block:
        - name: Remove unwanted packages gnome
          ansible.builtin.package:
            pkg:
              - gnome-mahjongg
            state: absent

    ### Debian block ###
    - name: Setup Debian
      when: distro == "debian"
      block:
        - name: Install debian packages
          ansible.builtin.apt:
            pkg:
              - bpytop
              - flatpak
              - fonts-firacode
              - fonts-font-awesome
              - fonts-powerline
              - ghc
              - git
              - gparted
              - kitty
              #- micro
              - neofetch
              - nextcloud-desktop
              - openscad
              - python3
              - qbittorrent
              - texlive-full
              - thunderbird
              - vim
              - vlc
              #- zsh
            state: present
            update_cache: true

    ### OpenSuse block ###
    - name: Setup OpenSuse
      when: distro == "opensuse"
      block:
        - name: Add VSCode repository
          block:
            - name: Import rpm repo
              ansible.builtin.command:
                sudo rpm --import https://packages.microsoft.com/keys/microsoft.asc
              register: my_output
              changed_when: my_output.rc != 0

            - name: Add repo
              ansible.builtin.command:
                sudo zypper addrepo https://packages.microsoft.com/yumrepos/vscode vscode
              register: my_output
              changed_when: my_output.rc != 0

            - name: Refresh repo cash
              ansible.builtin.command:
                sudo zypper refresh
              register: my_output
              changed_when: my_output.rc != 0

        - name: Add Tailscale repository
          block:
            - name: Import repository
              ansible.builtin.command:
                sudo zypper ar -g -r https://pkgs.tailscale.com/stable/opensuse/tumbleweed/tailscale.repo
              register: my_output
              changed_when: my_output.rc != 0

        - name: Install opensuse packages
          community.general.zypper:
            pkg:
              - flatpak
              - fira-code-fonts
              - fontawesome-fonts
              - powerline-fonts
              - ghc
              - git
              - kitty
              #- micro-editor
              - neofetch
              - nextcloud-desktop
              - openscad
              - qbittorrent
              - retroarch
              #- starship
              - steam
              - tailscale
              - texlive-scheme-medium
              - MozillaThunderbird
              - vim
              - vlc
              #- zsh
            state: present
            disable_recommends: false
            update_cache: true

        - name: Install bpytop with pip
          ansible.builtin.pip:
            name: bpytop

    ### Fedora block ###
    - name: Setup Fedora
      when: distro == "fedora"
      block:
        - name: Install rpm repositorys
          block:
            - name: Install rpm free
              ansible.builtin.command: sudo dnf install https://download1.rpmfusion.org/free/fedora/rpmfusion-free-release-$(rpm -E %fedora).noarch.rpm
              register: my_output
              changed_when: my_output.rc != 0

            - name: Install rpm unfree
              ansible.builtin.command: sudo dnf install https://download1.rpmfusion.org/nonfree/fedora/rpmfusion-nonfree-release-$(rpm -E %fedora).noarch.rpm
              register: my_output
              changed_when: my_output.rc != 0

        - name: Enable belsar/quickemu corp repo
          ansible.builtin.command: dnf copr enable belsar/quickemu
          register: my_output
          changed_when: my_output.rc != 0

        - name: Install fedora packages
          ansible.builtin.dnf:
            pkg:
              - bpytop
              - curl
              - flatpak
              - fira-code-fonts
              - fontawesome-fonts
              - powerline-fonts
              - ghc
              - git
              - kitty
              #- micro
              - neofetch
              - nextcloud-client
              - openscad
              - qbittorrent
              - texlive-scheme-medium
              - thunderbird
              - vim
              - vlc
              #- zsh
            state: present
            update_cache: true

    ### Flatpak block ###
    - name: Setup Flatpaks
      block:
        - name: Add flathub flatpak repository remote to the user installation
          community.general.flatpak_remote:
            name: flathub
            state: present
            flatpakrepo_url: https://flathub.org/repo/flathub.flatpakrepo
            method: user

        - name: Install Flatpaks
          community.general.flatpak:
            name: 
              - com.bitwarden.desktop
              - com.makemkv.MakeMKV
              - com.discordapp.Discord
              - sh.cider.Cider
              - org.onlyoffice.desktopeditors
              - com.github.tchx84.Flatseal
              - com.logseq.Logseq
              - com.borgbase.Vorta
              - com.github.jeromerobert.pdfarranger
              - com.heroicgameslauncher.hgl
              - com.makemkv.MakeMKV
              - com.protonvpn.www
              - fr.handbrake.ghb
              - org.freac.freac
            state: present
            remote: flathub

        - name: Install Gnome Extensions-Manager
          when: desktop == "gnome"
          community.general.flatpak:
            name: com.mattjakeman.ExtensionManager
            state: present
            remote: flathub          

    ### Zsh block ###
    - name: Setup zsh
      when: shell == "zsh" 
      block:
        - name: Change shell to zsh
          user:
            name: "{{ username }}"
            shell: /usr/bin/zsh

        - name: Clone zsh-autosuggestions from github
          ansible.builtin.git:
            repo: https://github.com/zsh-users/zsh-autosuggestions
            dest: /home/{{ username }}/.zsh/plugins/zsh-autosuggestions
            version: master

        - name: Clone zsh-completions from github
          ansible.builtin.git:
            repo: https://github.com/zsh-users/zsh-completions
            dest: /home/{{ username }}/.zsh/plugins/zsh-completions
            version: master

        - name: Clone zsh-syntax-highlighting from github
          ansible.builtin.git:
            repo: https://github.com/zsh-users/zsh-syntax-highlighting
            dest: /home/{{ username }}/.zsh/plugins/zsh-syntax-highlighting
            version: master

    ### Configfiles block ###
    - name: Import config files
      block:
        - name: Clone .config files repo
          ansible.builtin.git:
            repo: https://github.com/Clepnicx/config-files
            dest: /home/{{ username }}/config-files
            version: main

        - name: Move starship.toml
          ansible.builtin.copy:
            src: /home/{{ username }}/config-files/starship.toml
            dest: /home/{{ username }}/.config
            mode: preserve

        - name: Move kitty.conf
          ansible.builtin.copy:
            src: /home/{{ username }}/config-files/kitty.conf
            dest: /home/{{ username }}/.config/kitty/
            mode: preserve

        - name: Move .zshrc
          ansible.builtin.copy:
            src: /home/{{ username }}/config-files/.zshrc
            dest: /home/{{ username }}/
            mode: preserve

        - name: Move .bashrc
          ansible.builtin.copy:
            src: /home/{{ username }}/config-files/.bashrc
            dest: /home/{{ username }}/
            mode: preserve

        - name: Setup vim
          block:
            - name: Move .vimrc
              ansible.builtin.copy:
                src: /home/{{ username }}/config-files/.vimrc
                dest: /home/{{ username }}/
                mode: preserve
            - name: Create /.vim/
              ansible.builtin.command:
                mkdir -p ~/.vim ~/.vim/autoload ~/.vim/backup ~/.vim/colors ~/.vim/plugged
              register: my_output
              changed_when: my_output.rc != 0
            - name: Add vim-plug plugin manager
              ansible.builtin.command:
                curl -fLo ~/.vim/autoload/plug.vim --create-dirs https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
              register: my_output
              changed_when: my_output.rc != 0

    ### Tailscale ###
    - name: Setup Tailscale
      block:
        - name: Start tailscale service
          ansible.builtin.command:
            sudo systemctl enable --now tailscaled
          register: my_output
          changed_when: my_output.rc != 0

        - name: Connect machine to Tailscale Network
          ansible.builtin.command:
            sudo tailscale up
          register: my_output
          changed_when: my_output.rc != 0
      
